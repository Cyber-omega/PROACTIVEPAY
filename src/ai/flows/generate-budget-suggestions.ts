'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating personalized budget suggestions based on user spending.
 *
 * The flow takes user transaction history as input and returns AI-generated budget recommendations.
 *  - generateBudgetSuggestions - A function that handles the budget suggestions generation process.
 *  - GenerateBudgetSuggestionsInput - The input type for the generateBudgetSuggestions function.
 *  - GenerateBudgetSuggestionsOutput - The return type for the generateBudgetSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBudgetSuggestionsInputSchema = z.object({
  transactionHistory: z.string().describe('A detailed history of the user\'s transactions, including amounts, dates, and categories.'),
});
export type GenerateBudgetSuggestionsInput = z.infer<typeof GenerateBudgetSuggestionsInputSchema>;

const GenerateBudgetSuggestionsOutputSchema = z.object({
  suggestions: z.string().describe('Personalized budget suggestions generated by the AI, tailored to the user\'s spending habits.'),
});
export type GenerateBudgetSuggestionsOutput = z.infer<typeof GenerateBudgetSuggestionsOutputSchema>;

export async function generateBudgetSuggestions(input: GenerateBudgetSuggestionsInput): Promise<GenerateBudgetSuggestionsOutput> {
  return generateBudgetSuggestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateBudgetSuggestionsPrompt',
  input: {schema: GenerateBudgetSuggestionsInputSchema},
  output: {schema: GenerateBudgetSuggestionsOutputSchema},
  prompt: `You are a personal financial advisor. Analyze the user's transaction history and provide personalized budget suggestions to improve their financial health.\n\nTransaction History:\n{{{transactionHistory}}}\n\nBudget Suggestions:`,
});

const generateBudgetSuggestionsFlow = ai.defineFlow(
  {
    name: 'generateBudgetSuggestionsFlow',
    inputSchema: GenerateBudgetSuggestionsInputSchema,
    outputSchema: GenerateBudgetSuggestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
